{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","actions/productActions.js","components/ProductModal.js","actions/cartActions.js","components/Product.js","components/BunnyLoader.js","components/Message.js","components/Paginate.js","components/Meta.js","screens/AllProductsScreen.js","components/home/SquareImages.js","screens/HomeScreen.js","components/ControlledCarousel.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","components/ConfirmationModal.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_REMOVE_INVENTORY_REQUEST","PRODUCT_REMOVE_INVENTORY_SUCCESS","PRODUCT_REMOVE_INVENTORY_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_FEATURED_REQUEST","PRODUCT_FEATURED_SUCCESS","PRODUCT_FEATURED_FAIL","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_SHIP_REQUEST","ORDER_SHIP_SUCCESS","ORDER_SHIP_FAIL","ORDER_SHIP_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","count","error","productDetails","product","cart","cartItems","shippingAddress","item","existItem","find","cartItem","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","userList","users","userDelete","userUpdate","productRemoveInventory","productCreate","productUpdate","productDelete","orderList","orderShip","productFeatured","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","setFilter","Form","onSubmit","e","preventDefault","trim","push","toLowerCase","inline","Control","placeholder","name","onChange","target","value","className","autoComplete","size","style","width","height","as","Button","variant","Header","useSelector","useDispatch","Navbar","fixed","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Col","listProducts","pageNumber","pageSize","listProductDetails","ProductModal","props","images","nwt","brand","price","description","countInStock","_id","Modal","show","onHide","aria-labelledby","centered","closeButton","Title","Body","Row","xs","lg","Image","src","alt","fluid","handleAddToCart","disabled","buttonPressed","addToCart","qty","sex","category","subCategory","color","subColor","setItem","stringify","Product","modalShow","setModalShow","setButtonPressed","useEffect","Card","Img","Text","block","BunnyLoader","Message","children","Alert","defaultProps","Paginate","Pagination","Array","keys","x","active","Meta","keywords","Helmet","content","AllProductsScreen","match","params","sm","md","xl","SquareImages","image","index","HomeScreen","ControlledCarousel","imageIndex","setImageIndex","length","Carousel","fade","activeIndex","controls","onSelect","selectedIndex","ProductScreen","setQty","ListGroup","Number","CartScreen","removeFromCartHandler","removeFromCart","itemsInCart","reduce","acc","rounded","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","search","split","post","login","Group","controlId","Label","RegisterScreen","confirmPassword","setConfirmPassword","setName","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isShipped","shippedAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","createOrder","ConfirmationModal","confirmHandler","body","cancelButton","cancelButtonColor","confirmButton","confirmButtonColor","OrderScreen","orderId","showShip","setShowShip","sdkReady","setSdkReady","loadingPay","successPay","loadingShip","successShip","addPayPalScript","clientId","script","createElement","async","onload","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","shipOrder","UserListScreen","successDelete","setShow","modalItemId","setModalItemId","deleteHandler","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingRemove","errorRemove","successRemove","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","showRemove","setShowRemove","showDelete","setShowDelete","patch","removeProductInventory","deleteProduct","ProductEditScreen","productId","setNwt","setBrand","setPrice","setSize","setDescription","setSex","setCategory","setSubCategory","setColor","setSubColor","setCountInStock","setImages","uploading","setUploading","join","uploadFileHandler","files","formData","FormData","i","append","paths","path","console","updateProduct","rows","File","multiple","custom","OrderListScreen","App","basename","process","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b9ca38c1.chunk.js","sourcesContent":["//return all products\r\nexport const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\n//return individual product\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\n//return inventory from individual product\r\nexport const PRODUCT_REMOVE_INVENTORY_REQUEST =\r\n  \"PRODUCT_REMOVE_INVENTORY_REQUEST\";\r\nexport const PRODUCT_REMOVE_INVENTORY_SUCCESS =\r\n  \"PRODUCT_REMOVE_INVENTORY_SUCCESS\";\r\nexport const PRODUCT_REMOVE_INVENTORY_FAIL = \"PRODUCT_REMOVE_INVENTORY_FAIL\";\r\n\r\n//delete individual product\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\n//create individual product\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\n//update individual product\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\n//update individual product\r\nexport const PRODUCT_FEATURED_REQUEST = \"PRODUCT_FEATURED_REQUEST\";\r\nexport const PRODUCT_FEATURED_SUCCESS = \"PRODUCT_FEATURED_SUCCESS\";\r\nexport const PRODUCT_FEATURED_FAIL = \"PRODUCT_FEATURED_FAIL\";\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","//login / logout\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\n//register\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\n//profile\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\n//update profile\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_RESET\";\r\n\r\n//user list\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\n//delete a user\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\n//admin update a user\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_SHIP_REQUEST = \"ORDER_SHIP_REQUEST\";\r\nexport const ORDER_SHIP_SUCCESS = \"ORDER_SHIP_SUCCESS\";\r\nexport const ORDER_SHIP_FAIL = \"ORDER_SHIP_FAIL\";\r\nexport const ORDER_SHIP_RESET = \"ORDER_SHIP_RESET\";\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n//reducers\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productRemoveInventoryReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productFeaturedReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducers } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderShipReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\n//takes object of all of the imported reducers\r\nconst reducer = combineReducers({\r\n  //the key is the state, the value is the reducer\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducers,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  productRemoveInventory: productRemoveInventoryReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  orderList: orderListReducer,\r\n  orderShip: orderShipReducer,\r\n  productFeatured: productFeaturedReducer,\r\n});\r\n\r\n//upon inilization it will check local storage to see if there are any cartItems, if there is, it adds it to our initial state, otherwise it sets it as empty array\r\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\n//upon inilization it will check local storage to see if there is any userInfo, if there is, it adds it to our initial state, otherwise it sets it as empty object\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n//upon inilization it will check local storage to see if there is any shippingInfo, if there is, it adds it to our initial state, otherwise it sets it as empty object\r\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst paymentMethodFromLocalStorage = localStorage.getItem(\"paymentMethod\")\r\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromLocalStorage,\r\n    shippingAddress: shippingAddressFromLocalStorage,\r\n    paymentMethod: paymentMethodFromLocalStorage,\r\n  },\r\n  userLogin: {\r\n    userInfo: userInfoFromLocalStorage,\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_REMOVE_INVENTORY_REQUEST,\r\n  PRODUCT_REMOVE_INVENTORY_SUCCESS,\r\n  PRODUCT_REMOVE_INVENTORY_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_FEATURED_REQUEST,\r\n  PRODUCT_FEATURED_SUCCESS,\r\n  PRODUCT_FEATURED_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\n//reducer takes in the initial state (default state), and an action\r\n//the initial state is an empty array\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      //make a loading state object since the async call will take some time to complete\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n        count: action.payload.count,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      //make a loading state object since the async call will take some time to complete\r\n      // return { loading: true, ...state };\r\n      return { loading: true };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productRemoveInventoryReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_REMOVE_INVENTORY_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_REMOVE_INVENTORY_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_REMOVE_INVENTORY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productFeaturedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_FEATURED_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_FEATURED_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_FEATURED_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducers = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      //the payload will have the product id called 'product'\r\n      const item = action.payload;\r\n\r\n      //we have to handle the case in which the user tries to add an item that is already in the cart\r\n      //comparing each item's product id in cart with current item's product id\r\n      const existItem = state.cartItems.find(\r\n        (cartItem) => cartItem.product === item.product\r\n      );\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((cartItem) =>\r\n            cartItem.product === existItem.product ? item : cartItem\r\n          ),\r\n        };\r\n      } else {\r\n        //if it doesnt exist, push it to the state array\r\n        //spread all of current state, and update cartItems to all of current cartItems plus the new item\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (cartItem) => cartItem.product !== action.payload\r\n        ),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","//constants\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_SHIP_REQUEST,\r\n  ORDER_SHIP_SUCCESS,\r\n  ORDER_SHIP_FAIL,\r\n  ORDER_SHIP_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderShipReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_SHIP_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_SHIP_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_SHIP_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_SHIP_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\n//constants\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    //dispatch to reducer to change state to loading\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    //we must create a config object because when we send data we need to send a content type of application/json\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    //first argument is url, second is credentials, third is config\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n    //send off to reducer to update state\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    //set the user to local storage. it will stay on the clients side for further authentication\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    //if there is an error\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  //remove from local storage\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"cartItems\");\r\n  localStorage.removeItem(\"shippingAddress\");\r\n  localStorage.removeItem(\"paymentMethod\");\r\n  //call reducer to update state\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  document.location.href = \"/login\";\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    //dispatch to reducer to change state to loading\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    //we must create a config object because when we send data we need to send a content type of application/json\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    //first argument is url, second is credentials, third is config\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n    //send off to reducer to update state\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    //also dispatch user login so once the user registers, they also login\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    //set the user to local storage. it will stay on the clients side for further authentication\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    //if there is an error\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch to reducer to change state to loading\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    //destructure two levels of getState function\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //we must create a config object because when we send data we need to send a content type of application/json\r\n    //the token comes from the getState destructure\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //first argument is url, second is config\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    //send off to reducer to update state\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    //if there is an error\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch to reducer to change state to loading\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    //destructure two levels of getState function\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //we must create a config object because when we send data we need to send a content type of application/json\r\n    //the token comes from the getState destructure\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //first argument is url, second is user object updatres, third is config\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n    //send off to reducer to update state\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    //since the user might update their name, the navbar will be affected and must be reloaded\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    //update local storage\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    //if there is an error\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch to reducer to change state to loading\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n    //destructure two levels of getState function\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //we must create a config object because when we send data we need to send a content type of application/json\r\n    //the token comes from the getState destructure\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //first argument is url, second is config\r\n    await axios.delete(`/api/users/${id}`, config);\r\n    //send off to reducer to update state\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    //if there is an error\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch to reducer to change state to loading\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    //destructure two levels of getState function\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //we must create a config object because when we send data we need to send a content type of application/json\r\n    //the token comes from the getState destructure\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //first argument is url, second is user,. third isconfig\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n    //send off to reducer to update state\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    //if there is an error\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\n//CSS\r\nimport \"./SearchBox.css\";\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"Title\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/products/search/${keyword}/${filter.toLowerCase()}`);\r\n      setKeyword(\"\");\r\n    } else {\r\n      history.push(\"/products\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder={`Search by ${filter}...`}\r\n        // variant=\"secondary\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        className=\"header__search-box\"\r\n        autoComplete=\"off\"\r\n        value={keyword}\r\n        size=\"sm\"\r\n      />\r\n      <Form.Control\r\n        className=\"mr-2 header__select\"\r\n        size=\"sm\"\r\n        style={{ width: \"20px\", height: \"20px\" }}\r\n        as=\"select\"\r\n        onChange={(e) => {\r\n          setFilter(e.target.value);\r\n        }}\r\n      >\r\n        <option>Title</option>\r\n        <option>Brand</option>\r\n        <option>Size</option>\r\n        <option>Gender</option>\r\n        <option>Category</option>\r\n        <option>Color</option>\r\n        <option>Description</option>\r\n      </Form.Control>\r\n\r\n      <Button type=\"submit\" variant=\"secondary\" className=\"p-2 btn-sm py-0\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\n//actions\r\nimport { logout } from \"../actions/userActions\";\r\n\r\n//components\r\nimport SearchBox from \"./SearchBox\";\r\n\r\n//css\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        fixed=\"top\"\r\n        bg=\"primary\"\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n        collapseOnSelect\r\n      >\r\n        {/* logo */}\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <div className=\"header__logo\">\r\n                Tailored by <strong>botique</strong>\r\n              </div>\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          {/* side/collapsable links */}\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            {/* the navbar does not have direct access to history, so we need Route to render it for us */}\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/products\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-tshirt mr-1\"></i>\r\n                  <span className=\"header__responsive-text\">\r\n                    Browse Inventory\r\n                  </span>\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart mr-1\"></i>\r\n                  <span className=\"header__responsive-text\">Cart</span>\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {/* if the user is logged in, show name and drop down menu */}\r\n              {userInfo ? (\r\n                //user name\r\n                //renders an icon and the name if there is a user, the icon and text is responsive\r\n                <NavDropdown\r\n                  title={\r\n                    <span>\r\n                      <i className=\"fas fa-user mr-1 header__responsive-icon\"></i>{\" \"}\r\n                      <span className=\"header__responsive-text\">\r\n                        {userInfo.name}\r\n                      </span>{\" \"}\r\n                    </span>\r\n                  }\r\n                  id=\"username\"\r\n                >\r\n                  {/* uprofile link */}\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  {/* logout button */}\r\n                  <NavDropdown.Item onClick={handleLogout}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                //if the user is not logged in, show the sign in button\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user mr-1\"></i>\r\n                    Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                //admin privs\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  {/* admin users list */}\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  {/* admin products list */}\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  {/* admin orders list */}\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Col } from \"react-bootstrap\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div>\r\n        <Col className=\"text-center py-3\">&copy; Harshil Prajapati</Col>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center footer__social-icons\">\r\n        <a href=\"https://www.instagram.com\">\r\n          <i className=\"fab fa-instagram-square footer__social-icon\"></i>\r\n        </a>\r\n        <a href=\"https://www.facebook.com\">\r\n          <i className=\"fab fa-facebook-square footer__social-icon\"></i>\r\n        </a>\r\n        <a href=\"https://www.pinterest.com\">\r\n          <i className=\"fab fa-pinterest-square footer__social-icon\"></i>\r\n        </a>\r\n        <a href=\"https://www.twitter.com\">\r\n          <i className=\"fab fa-twitter-square footer__social-icon\"></i>\r\n        </a>\r\n        <a href=\"https://www.youtube.com\">\r\n          <i className=\"fab fa-youtube-square footer__social-icon\"></i>\r\n        </a>\r\n      </div>\r\n\r\n      <div>\r\n        <Col className=\"text-center py-3\">\r\n          <small>\r\n            created with ❤️ by\r\n            <a\r\n              href=\"https://www.linkedin.com/in/harshil-prajapati-008b101ba/\"\r\n              className=\"text-info\"\r\n            >\r\n              <strong> Harshil Prajapati</strong>\r\n            </a>\r\n          </small>\r\n        </Col>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\n//constants\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_REMOVE_INVENTORY_REQUEST,\r\n  PRODUCT_REMOVE_INVENTORY_SUCCESS,\r\n  PRODUCT_REMOVE_INVENTORY_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_FEATURED_REQUEST,\r\n  PRODUCT_FEATURED_SUCCESS,\r\n  PRODUCT_FEATURED_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\n//actions\r\nimport { logout } from \"./userActions\";\r\n\r\n//keyword is the search word, default to empty string\r\nexport const listProducts = (\r\n  keyword = \"\",\r\n  pageNumber = \"\",\r\n  pageSize = \"\",\r\n  filter = \"\"\r\n) => async (dispatch) => {\r\n  try {\r\n    //immediatly dispatch the action request to update state to product = [] and loading = true\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    //data is pages, product, and the page\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}&filter=${filter}`\r\n    );\r\n    //after successfuling fetching the data dispatch action request success to update loading to false and product to action.payload\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    //if fail, dispatch action fail to change state to loading fail, and error\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    //immediatly dispatch the action request to update state to product = {} and loading = true\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    //after successfuling fetching the data dispatch action request success to update loading to false and product to action.payload\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    //if fail, dispatch action fail to change state to loading fail, and error\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeProductInventory = (id) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch that we are making a request, loading state goes to true\r\n    dispatch({\r\n      type: PRODUCT_REMOVE_INVENTORY_REQUEST,\r\n    });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //patch the request with route, and config\r\n    await axios.patch(`/api/products/${id}`, id, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_REMOVE_INVENTORY_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_REMOVE_INVENTORY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch that we are making a request, loading state goes to true\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //patch the request with route, and config\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch that we are making a request, loading state goes to true\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //patch the request with route, and config\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listFeaturedProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_FEATURED_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/featured`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_FEATURED_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    //if fail, dispatch action fail to change state to loading fail, and error\r\n    dispatch({\r\n      type: PRODUCT_FEATURED_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import { Modal, Button, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst ProductModal = (props) => {\r\n  const {\r\n    images,\r\n    name,\r\n    nwt,\r\n    brand,\r\n    price,\r\n    size,\r\n    description,\r\n    countInStock,\r\n    _id: id,\r\n  } = props.product;\r\n\r\n  return (\r\n    //basic modal properties\r\n    <Modal\r\n      // {...props}\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      {/* close button */}\r\n      <Modal.Header closeButton>\r\n        {/* name (short description) */}\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">{name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            {/* left col */}\r\n            <Col xs={12} lg={4}>\r\n              {/* image */}\r\n              <Image\r\n                src={images[0]}\r\n                alt={name}\r\n                fluid\r\n                className=\"d-block mx-auto w-100 rounded\"\r\n              />\r\n            </Col>\r\n            {/* right col */}\r\n            <Col xs={12} lg={8}>\r\n              {/* brand and nwt */}\r\n              <Container className=\"px-0 mb-3 d-flex justify-content-between align-items-center\">\r\n                <h4 className=\"mb-0 text-dark\">{brand}</h4>\r\n                {nwt && (\r\n                  <span className=\"badge badge-pill badge-primary\">NWT</span>\r\n                )}\r\n              </Container>\r\n              {/* description */}\r\n              <p>{description}</p>\r\n              {/* price and size */}\r\n              <Container className=\"px-0 d-flex justify-content-between align-items-center\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <small className=\"text-uppercase mr-1\">size</small>\r\n                  <h3 className=\"mb-0 d-flex align-items-center\">\r\n                    <span className=\"badge badge-pill badge-primary\">\r\n                      <strong>{size}</strong>\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                <h3 className=\"mb-0\">${price}</h3>\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n\r\n      {/* buttons */}\r\n      <Modal.Footer className=\"justify-content-right\">\r\n        <LinkContainer to={`/products/${id}`}>\r\n          <Button>View Full Listing</Button>\r\n        </LinkContainer>\r\n\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"secondary\"\r\n          onClick={() => props.handleAddToCart()}\r\n          disabled={countInStock < 1 || props.buttonPressed}\r\n        >\r\n          {props.buttonPressed\r\n            ? \"Item in Cart\"\r\n            : countInStock < 1\r\n            ? \"Out of Stock\"\r\n            : \"Quick Add to Cart\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","import axios from \"axios\";\r\n\r\n//constants\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      nwt: data.nwt,\r\n      brand: data.brand,\r\n      price: data.price,\r\n      size: data.size,\r\n      description: data.description,\r\n      sex: data.sex,\r\n      category: data.category,\r\n      subCategory: data.subCategory,\r\n      color: data.color,\r\n      subColor: data.subColor,\r\n      countInStock: data.countInStock,\r\n      images: data.images,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  //saving objejct in local storage as 'cartItems'\r\n  //getState will allow us to access our current state, after the current add to cart has finished\r\n  //localStorage can only save strings, not JS objects, so we must stringify\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n//takes in form data\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  //save shipping address as shippingAddress in local storage\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\n//takes in form data which is payment method\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  //save shipping address as shippingAddress in local storage\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import { Card, Container, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport \"./Product.css\";\r\n\r\n//components\r\nimport ProductModal from \"../components/ProductModal\";\r\n\r\n//actions\r\nimport { addToCart } from \"../actions/cartActions\";\r\n\r\nconst Product = (props) => {\r\n  //local state to toggle viewing the quick view modal, gets passed to ProductModal\r\n  const [modalShow, setModalShow] = useState(false);\r\n  //local state to toggle if the quick add button was pressed\r\n  const [buttonPressed, setButtonPressed] = useState(false);\r\n\r\n  const {\r\n    name,\r\n    images,\r\n    brand,\r\n    nwt,\r\n    size,\r\n    price,\r\n    countInStock,\r\n    _id: id,\r\n  } = props.product;\r\n\r\n  const dispatch = useDispatch();\r\n  //add to cart button function\r\n  const handleAddToCart = () => {\r\n    setButtonPressed(true);\r\n    dispatch(addToCart(id, 1));\r\n  };\r\n\r\n  //checks to see if the current item is already in the cart, if it is, the cart button will default to true\r\n  const existItem = props.cartItems.find((cartItem) => cartItem.product === id);\r\n  useEffect(() => {\r\n    if (existItem) {\r\n      setButtonPressed(true);\r\n    }\r\n  }, [existItem]);\r\n\r\n  //helper function to pass to Modal\r\n  const setModalShowFalse = () => {\r\n    setModalShow(false);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded text-dark shadow test\">\r\n      {/* image */}\r\n      <Link to={`/products/${id}`}>\r\n        <Card.Img\r\n          src={images[0]}\r\n          variant=\"top\"\r\n          className=\"position-relative product__image rounded\"\r\n        />\r\n      </Link>\r\n      {nwt && <span className=\"nwt badge badge-pill badge-primary\">NWT</span>}\r\n\r\n      {/* name (short description) */}\r\n      <div className=\"card-body m-0 p-0\">\r\n        <Link to={`/products/${id}`}>\r\n          <Card.Text as=\"div\" className=\"text-dark name__font pt-1\">\r\n            {name}\r\n          </Card.Text>\r\n        </Link>\r\n\r\n        {/* price and size */}\r\n        <Container className=\"px-0 d-flex justify-content-between pt-1\">\r\n          <Card.Text as=\"div\">\r\n            <strong>${price}</strong>\r\n          </Card.Text>\r\n          <Card.Text as=\"div\" className=\"d-flex align-items-center\">\r\n            <small className=\"text-uppercase mr-1 size__font text-muted\">\r\n              size\r\n            </small>\r\n            <span className=\"badge badge-pill badge-primary\">\r\n              <strong>{size}</strong>\r\n            </span>\r\n          </Card.Text>\r\n        </Container>\r\n\r\n        {/* brand */}\r\n        <Card.Title className=\"my-1\">\r\n          <strong>{brand}</strong>\r\n        </Card.Title>\r\n      </div>\r\n\r\n      {/* buttons */}\r\n      <Card.Footer>\r\n        <Button\r\n          size=\"sm\"\r\n          block\r\n          variant=\"primary\"\r\n          onClick={() => setModalShow(true)}\r\n        >\r\n          Quick View\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          block\r\n          onClick={() => handleAddToCart()}\r\n          disabled={countInStock < 1 || buttonPressed}\r\n        >\r\n          {/* if the button gets pressed, it is disabled and says Card Quantity x1 */}\r\n          {buttonPressed\r\n            ? \"Item in Cart\"\r\n            : countInStock < 1\r\n            ? \"Out of Stock\"\r\n            : \"Quick Add to Cart\"}\r\n        </Button>\r\n      </Card.Footer>\r\n\r\n      {/* modal, modalShow is the boolean which is toggled by setModalShow */}\r\n      <ProductModal\r\n        show={modalShow}\r\n        onHide={setModalShowFalse}\r\n        product={props.product}\r\n        handleAddToCart={handleAddToCart}\r\n        buttonPressed={buttonPressed}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import \"./BunnyLoader.css\";\r\n\r\nconst BunnyLoader = () => {\r\n  return (\r\n    <div className=\"centered\">\r\n      <div className=\"rabbit-background centered\"></div>\r\n      <div className=\"rabbit\"></div>\r\n      <div className=\"clouds\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BunnyLoader;\r\n","import { Alert } from \"react-bootstrap\";\r\n\r\n//children is the text we want inside\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\n//set a default for variant\r\n//info is just a blue color\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({ filter, pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  //only show the links if there is more than one page\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination className=\"justify-content-center mt-3\">\r\n        {/* make pages an array so we can map through it */}\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/products/search/${keyword}/page/${x + 1}/${filter}`\r\n                  : `/products/page/${x + 1}/${filter}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport React from \"react\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keyword\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Tailored by Harshil\",\r\n  // keywords: '',\r\n  // description: ''\r\n};\r\n\r\nexport default Meta;\r\n","import { Row, Col } from \"react-bootstrap\";\r\nimport { useEffect } from \"react\";\r\n//useDispatch is used to get access to call actions, useSelector gets access to state\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// import Loader from \"../components/Loader\";\r\n\r\n//actions\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\n//components\r\nimport Product from \"../components/Product\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst AllProductsScreen = ({ match }) => {\r\n  //check to see if there is a search param\r\n  const keyword = match.params.keyword;\r\n  //check to see if there is a search param\r\n  const filter = match.params.filter;\r\n  //checks to see if the result was split by pagination\r\n  const pageNumber = match.params.pageNumber || 1;\r\n  //to use disatch you must define and call it\r\n  const pageSize = 50;\r\n  //to use disatch you must define and call it\r\n  const dispatch = useDispatch();\r\n\r\n  //this needs to match what it is called in the store(key), to access state\r\n  //useSelector takes in state and returns what portion of the state we want. THen you can deconstruct it\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages, count } = productList;\r\n\r\n  //this will be used when rendering each product, so it knows if the quick add button should start as pressed or not\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  //useEffect takes a list of dependencies, it will fire off whenever any of those dependencies changes\r\n  useEffect(() => {\r\n    //fire off the listProducts action creator to fetch all the products\r\n    //will also account for narrowing down the results if there is a keyword\r\n    dispatch(listProducts(keyword, pageNumber, pageSize, filter));\r\n  }, [dispatch, keyword, pageNumber, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Tailored by Harshil - Shopping\" />\r\n      {/* check the loading state to, loading icon if its loading, , check for error and render all the product cards if it is not */}\r\n      {loading ? (\r\n        //<Loader />\r\n        <div className=\"centered\">\r\n          <BunnyLoader />\r\n        </div>\r\n      ) : error ? (\r\n        //danger is red because it is an error\r\n        <Message variant=\"danger\">\r\n          <h3>{error}</h3>\r\n        </Message>\r\n      ) : (\r\n        <>\r\n          <h1>Latest Products</h1>\r\n          <h2>\r\n            {keyword &&\r\n              count > 4 &&\r\n              `There is a total of ${count} items that meet the criteria of ${keyword} in ${filter}.`}\r\n          </h2>\r\n          {count === 0 && (\r\n            <h2>There are currently no items. Please check back later!</h2>\r\n          )}\r\n          {!keyword && count !== 0 && (\r\n            <h2>\r\n              There are currently {count} items available. Happy shopping!\r\n            </h2>\r\n          )}\r\n          <>\r\n            <Paginate\r\n              filter={filter}\r\n              pages={pages}\r\n              page={page}\r\n              keyword={keyword ? keyword : \"\"}\r\n            />\r\n            <Row>\r\n              {/* renders all of the product carts in a grid format, each product goes in a col, already in a row */}\r\n              {products.map((product) => (\r\n                <Col\r\n                  key={product._id}\r\n                  sm={12}\r\n                  md={6}\r\n                  lg={4}\r\n                  xl={3}\r\n                  className=\"d-flex justify-content-center align-self-stretch\"\r\n                >\r\n                  <Product product={product} cartItems={cartItems} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            <Paginate\r\n              filter={filter}\r\n              pages={pages}\r\n              page={page}\r\n              keyword={keyword ? keyword : \"\"}\r\n            />\r\n          </>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllProductsScreen;\r\n","// import { Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\n//CSS\r\nimport \"./SquareImages.css\";\r\n\r\nconst SquareImages = () => {\r\n\r\n  const images = [\r\n    {\r\n      \"src\": \"../../uploads/image_140.jpeg\",\r\n      \"alt\": \"Gallery 1\",\r\n      \"className\": \"gallery__item gallery__item--1\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_191.jpg\",\r\n      \"alt\": \"Gallery 2\",\r\n      \"className\": \"gallery__item gallery__item--2\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_516.jpg\",\r\n      \"alt\": \"Gallery 3\",\r\n      \"className\": \"gallery__item gallery__item--3\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_671.jpg\",\r\n      \"alt\": \"Gallery 4\",\r\n      \"className\": \"gallery__item gallery__item--4\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_745.jpg\",\r\n      \"alt\": \"Gallery 5\",\r\n      \"className\": \"gallery__item gallery__item--5\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_840.jpg\",\r\n      \"alt\": \"Gallery 6\",\r\n      \"className\": \"gallery__item gallery__item--6\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_1032.jpg\",\r\n      \"alt\": \"Gallery 7\",\r\n      \"className\": \"gallery__item gallery__item--7\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_1359.jpg\",\r\n      \"alt\": \"Gallery 8\",\r\n      \"className\": \"gallery__item gallery__item--8\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_1393.jpg\",\r\n      \"alt\": \"Gallery 9\",\r\n      \"className\": \"gallery__item gallery__item--9\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_1545.jpg\",\r\n      \"alt\": \"Gallery 10\",\r\n      \"className\": \"gallery__item gallery__item--10\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_1609.jpg\",\r\n      \"alt\": \"Gallery 11\",\r\n      \"className\": \"gallery__item gallery__item--11\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/image_1626.jpg\",\r\n      \"alt\": \"Gallery 12\",\r\n      \"className\": \"gallery__item gallery__item--12\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/tay14.jpg\",\r\n      \"alt\": \"Gallery 13\",\r\n      \"className\": \"gallery__item gallery__item--13\"\r\n    },\r\n    {\r\n      \"src\": \"../../uploads/tay2.jpg\",\r\n      \"alt\": \"Gallery 14\",\r\n      \"className\": \"gallery__item gallery__item--14\"\r\n    }\r\n  ]\r\n  return (\r\n    <div>\r\n      <div className=\"welcome-box\">\r\n        <h2>Welcome to my shop!</h2>\r\n        <h1>Tailored by Harshil</h1>\r\n      </div>\r\n      <div className=\"gallery\">\r\n        {images.map((image, index) => (\r\n\r\n          <figure key={index} className={image.className}>\r\n            <img\r\n              src={image.src}\r\n              alt={image.alt}\r\n              className=\"gallery__img\"\r\n            />\r\n          </figure>\r\n\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SquareImages;\r\n","// import { Container } from \"react-bootstrap\";\r\n\r\n//components\r\n// import FeaturedCarousel from \"../components/FeaturedCarousel\";\r\nimport SquareImages from \"../components/home/SquareImages\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <>\r\n      <Meta title=\"Tailored by Harshil - Welcome\" />\r\n      <SquareImages />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { Image, Carousel, Button } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst ControlledCarousel = ({ product }) => {\r\n  let { images, name } = product;\r\n  //carousel is rendered when index changes\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n\r\n  //removes any image with '' as field, the seeder has some pictures that just have a cama\r\n  if (images) {\r\n    images = images.filter((image) => image.length > 2);\r\n  }\r\n\r\n  //previous button handle function, resets index when it completes loop\r\n  const changeImageLeft = () => {\r\n    if (imageIndex === 0) {\r\n      setImageIndex(images.length - 1);\r\n    } else {\r\n      setImageIndex(imageIndex - 1);\r\n    }\r\n  };\r\n\r\n  //next button handle function, resets index when it completes loop\r\n  const changeImageRight = () => {\r\n    if (imageIndex === images.length - 1) {\r\n      setImageIndex(0);\r\n    } else {\r\n      setImageIndex(imageIndex + 1);\r\n    }\r\n  };\r\n\r\n  //handles the index if user clicks on the tally to switch pictures\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setImageIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Carousel\r\n        fade\r\n        activeIndex={imageIndex}\r\n        controls={false}\r\n        onSelect={handleSelect}\r\n      >\r\n        {/* maps through each image and loads the Carosel with the item and image */}\r\n        {images.map((image, index) => (\r\n          <Carousel.Item key={index}>\r\n            <Image\r\n              src={images[imageIndex]}\r\n              alt={name}\r\n              fluid\r\n              className=\"w-100\"\r\n            />\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n      {/* custom buttons */}\r\n      <div className=\"d-flex mt-2 mb-2\">\r\n        <Button variant=\"outline-dark\" block onClick={() => changeImageLeft()}>\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          variant=\"dark\"\r\n          block\r\n          className=\"h-100 mt-0\"\r\n          onClick={() => changeImageRight()}\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ControlledCarousel;\r\n","import { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//components\r\nimport ControlledCarousel from \"../components/ControlledCarousel\";\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//action creators\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  //component level state for qty. this is how many items the user selects in the drop down\r\n  const [qty, setQty] = useState(1);\r\n\r\n  //dispatch will give us access to action creators\r\n  const dispatch = useDispatch();\r\n\r\n  //this gives us access to the state productDetails which has product, error, and loading bool, then deconstruct it\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n\r\n  //deconstruct the whole state object\r\n  const { loading, error, product } = productDetails;\r\n\r\n  //use effect cannot be async. Define function that is async and then immediatly call it\r\n  //useEffect takes a list of dependencies, it will fire off whenever any of those dependencies changes\r\n  useEffect(() => {\r\n    //dispatch the fetch product action creator\r\n    //if the id in the url param is in state\r\n    if (product && match.params.id !== product._id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n    }\r\n  }, [dispatch, product, match]);\r\n\r\n  //add to cart button function\r\n  const handleAddToCart = () => {\r\n    dispatch(addToCart(product._id, Number(qty)));\r\n    //bring the user to the cart page\r\n    history.push(\"/cart\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* back button */}\r\n      <Link to=\"/products\" className=\"btn btn-outline-secondary mb-3\">\r\n        Go Back to the Shop\r\n      </Link>\r\n      {/* check to see if the item is still loading, check for error, if not, render the product */}\r\n      {loading ? (\r\n        <BunnyLoader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">\r\n          <h3>{error}</h3>\r\n        </Message>\r\n      ) : (\r\n        <Row>\r\n          {/* left col is picture, half of the row */}\r\n          <Col md={12} lg={5}>\r\n            {/* image carousel */}\r\n            {/* checks to make sure there are images to load into the carousel(during inilitization) */}\r\n            {loading === false && <ControlledCarousel product={product} />}\r\n            {/* <Image src={images[0]} alt={name} fluid className=\"w-100\" /> */}\r\n          </Col>\r\n          {/* middle col is descriptions, one third of the row */}\r\n          <Col md={12} lg={4}>\r\n            <ListGroup variant=\"flush\" className=\"mb-3\">\r\n              {/* name (small description) */}\r\n              <ListGroup.Item>\r\n                <h4 className=\"mb-0\" style={{ color: \"#5a5a5a\" }}>\r\n                  {product.name}\r\n                </h4>\r\n              </ListGroup.Item>\r\n              {/* brand and nwt */}\r\n              <ListGroup.Item>\r\n                <Container className=\"px-0 d-flex justify-content-between align-items-center\">\r\n                  <h5 className=\"mb-0 text-dark\">{product.brand}</h5>\r\n                  {product.nwt && (\r\n                    <span className=\"badge badge-pill badge-primary\">NWT</span>\r\n                  )}\r\n                </Container>\r\n              </ListGroup.Item>\r\n              {/* price and size */}\r\n              <ListGroup.Item>\r\n                <Container className=\"px-0 d-flex justify-content-between align-items-center\">\r\n                  <h3 className=\"mb-0 text-dark\">${product.price}</h3>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <small className=\"text-uppercase mr-1\">size</small>\r\n                    <h3 className=\"mb-0 d-flex align-items-center\">\r\n                      <span className=\"badge badge-pill badge-primary\">\r\n                        <strong>{product.size}</strong>\r\n                      </span>\r\n                    </h3>\r\n                  </div>\r\n                </Container>\r\n              </ListGroup.Item>\r\n              {/* description */}\r\n              <ListGroup.Item>{product.description}</ListGroup.Item>\r\n              {/* sex, category, subCategory */}\r\n              <ListGroup.Item>\r\n                <Container className=\"px-0 d-flex align-items-center\">\r\n                  <span className=\"badge badge-pill badge-primary mr-2\">\r\n                    {product.sex}\r\n                  </span>\r\n                  <span className=\"badge badge-pill badge-primary mr-2\">\r\n                    {product.category}\r\n                  </span>\r\n                  {product.subCategory && (\r\n                    <span className=\"badge badge-pill badge-primary\">\r\n                      {product.subCategory}\r\n                    </span>\r\n                  )}\r\n                </Container>\r\n              </ListGroup.Item>\r\n              {/* color and subColor */}\r\n              <ListGroup.Item>\r\n                <Container className=\"px-0 d-flex align-items-center\">\r\n                  <span className=\"badge badge-pill badge-primary mr-2\">\r\n                    {product.color}\r\n                  </span>\r\n\r\n                  {product.subColor && (\r\n                    <span className=\"badge badge-pill badge-primary\">\r\n                      {product.subColor}\r\n                    </span>\r\n                  )}\r\n                </Container>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          {/* third col is add to cart */}\r\n          <Col md={12} lg={3}>\r\n            <Card className=\"shadow\">\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>\r\n                      <strong>Price:</strong>\r\n                    </Col>\r\n                    <Col>\r\n                      <strong className=\"text-dark\">${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>\r\n                      <strong>Status:</strong>\r\n                    </Col>\r\n                    <Col className=\"d-flex align-items-center\">\r\n                      {product.countInStock > 0 ? (\r\n                        <span className=\"badge badge-primary\">In Stock</span>\r\n                      ) : (\r\n                        <span className=\"badge badge-danger\">Sold</span>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {/* if the item is in stock, show the qty and selection form */}\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row className=\"d-flex align-items-center\">\r\n                      <Col>\r\n                        <strong>Qty</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {/* this will give us an array counting up to keys. If the qty was 4, the array would be [0, 1, 2, 3] */}\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {/* add to cart button */}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"secondary\"\r\n                    className=\"btn-block btn-lg\"\r\n                    onClick={handleAddToCart}\r\n                    disabled={product.countInStock < 1}\r\n                  >\r\n                    {product.countInStock < 1 ? \"Out of Stock\" : \"Add to Cart\"}\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n          <Meta title={`${product.brand} size ${product.size}`} />\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\n//match, location, and history are available from the react-router\r\n//match will help with the params\r\n//location will help get the query string\r\n//history will help with the redirects\r\nconst CartScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const proceedToCheckoutHandler = () => {\r\n    //if they are not logged in they go to login, else they go to shipping\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  //helper that returns how many items are in the cart\r\n  const itemsInCart = cartItems.reduce((acc, item) => acc + item.qty, 0);\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Tailored by Harshil - Cart\" />\r\n      <Link to=\"/products\" className=\"btn btn-outline-secondary mb-3\">\r\n        Go Back to the Shop\r\n      </Link>\r\n\r\n      <Row>\r\n        {/* checks to see if cart is empty, if it is, back button, else, render cart items */}\r\n        <Col lg={8} xs={12} className=\"mb-3\">\r\n          {cartItems.length === 0 ? (\r\n            <div>\r\n              <Message>Your Cart is Empty</Message>\r\n            </div>\r\n          ) : (\r\n            //rendered cart items\r\n            <ListGroup variant=\"flush\">\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item key={item.product}>\r\n                  {/* pic, name, size, price, qty, delete */}\r\n                  <Row className=\"align-items-center\">\r\n                    {/* name */}\r\n                    <Col md={4} xs={12} className=\"mb-2\">\r\n                      <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                    </Col>\r\n                    {/* image */}\r\n                    <Col md={2} sm={5} xs={4} className=\"cart__image\">\r\n                      <Link to={`/products/${item.product}`}>\r\n                        <Image\r\n                          src={item.images[0]}\r\n                          alt={item.name}\r\n                          fluid\r\n                          rounded\r\n                        />\r\n                      </Link>\r\n                    </Col>\r\n                    {/* size, price, form */}\r\n                    <Col xs={2}>size {item.size}</Col>\r\n                    <Col xs={1}>${item.price}</Col>\r\n                    <Col sm={2} xs={3}>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(\r\n                            addToCart(item.product, Number(e.target.value))\r\n                          )\r\n                        }\r\n                      >\r\n                        {/* this will give us an array counting up to keys. If the qty was 4, the array would be [0, 1, 2, 3] */}\r\n                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    {/* delete button */}\r\n                    <Col md={1} xs={2}>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={() => removeFromCartHandler(item.product)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n        <Col lg={4} xs={12}>\r\n          <Card className=\"shadow\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                {/* shows how many items in cart, loop through cart and the items quantity to the accum */}\r\n                <h3>\r\n                  Subtotal (<strong>{itemsInCart}</strong>){\" \"}\r\n                  {/* if there is only one item, singular, else, plural */}\r\n                  {itemsInCart === 1 ? \"item\" : \"items\"}\r\n                </h3>\r\n                {/* whos the total price to fixed 2 digits */}\r\n                <h4 className=\"mb-0\">\r\n                  $\r\n                  {cartItems\r\n                    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                    .toFixed(2)}\r\n                </h4>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"secondary\"\r\n                  className=\"btn-block btn-lg\"\r\n                  onClick={proceedToCheckoutHandler}\r\n                  disabled={cartItems.length === 0}\r\n                >\r\n                  Proceed to Checkout\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { login } from \"../actions/userActions\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  //component state that will hold the email and password\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  //if there is a redirect, split it off into index 1\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  //if the user is already logged in, then apply a redirect so they do not see the login screen again\r\n  //they would head directly to the shipping page if they are already logged in\r\n  useEffect(() => {\r\n    //if we are not logged in then userInfo will be null\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  //handle submit button\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //call action creater with email and password state that the user provided\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Meta title=\"Tailored by Harshil - Login\" />\r\n      <h1>Sign In</h1>\r\n      {/* check to see if the action is still loading or has an error  */}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <BunnyLoader />}\r\n      <Form onSubmit={submitHandler}>\r\n        {/* email */}\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* password */}\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* button */}\r\n        <Button type=\"submit\" variant=\"secondary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Shopper?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { register } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  //component state that will hold the name, email and password\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  //if there is a redirect, split it off into index 1\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  //if the user is already logged in, then apply a redirect so they do not see the login screen again\r\n  //they would head directly to the shipping page if they are already logged in\r\n  useEffect(() => {\r\n    //if we are not logged in then userInfo will be null\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  //handle submit button\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    //check to see if the passwords match\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      //call action creater with name, email and password state that the user provided\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Meta title=\"Tailored by Harshil - Register\" />\r\n      <h1>Sign Up</h1>\r\n      {/* error message that pops up if the passwords do not match */}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {/* check to see if the action is still loading or has an error  */}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <BunnyLoader />}\r\n      <Form onSubmit={submitHandler}>\r\n        {/* name */}\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* email */}\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* password */}\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* confirm password */}\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* button */}\r\n        <Button type=\"submit\" variant=\"secondary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Already a Member?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Sign In\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//constants // ACTIONS\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\n//actions\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  //component state that will hold the name, email and password\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //gets the success value if the profile update was successful, nothing if not, this is used for a notification confirmation message for the user\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  //if the user is already logged in, then apply a redirect so they do not see the login screen again\r\n  //they would head directly to the shipping page if they are already logged in\r\n  useEffect(() => {\r\n    //if we are not logged in then userInfo will be null\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  //handle submit button\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    //check to see if the passwords match\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Meta title=\"Tailored by Tay - Profile\" />\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {/* error message that pops up if the passwords do not match */}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {/* check to see if the action is still loading or has an error  */}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {/* check to see if the profile update was successful  */}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <BunnyLoader />}\r\n        <Form onSubmit={submitHandler}>\r\n          {/* name */}\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          {/* email */}\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          {/* password */}\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          {/* confirm password */}\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          {/* button */}\r\n          <Button type=\"submit\" variant=\"dark\">\r\n            Update Profile\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        {/* my orders */}\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <BunnyLoader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>SHIPPED</th>\r\n                <th>DETAILS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>\r\n                    {/* only want the first 10 characters of the date string */}\r\n                    {order.createdAt.substring(0, 10)}\r\n                  </td>\r\n                  <td>{order.totalPrice.toFixed(2)}</td>\r\n                  {/* is paid */}\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  {/* is shipped */}\r\n                  <td>\r\n                    {order.isShipped ? (\r\n                      order.shippedAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/orders/${order._id}`}>\r\n                      <Button block size=\"sm\" variant=\"info\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from \"axios\";\r\n\r\n//constants\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_SHIP_REQUEST,\r\n  ORDER_SHIP_SUCCESS,\r\n  ORDER_SHIP_FAIL,\r\n} from \"../constants/orderConstants\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\n//actions\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch that we are making a request, loading state goes to true\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //post the request with route, order info, and config\r\n    const { data } = await axios.post(\"/api/orders\", order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch that we are making a request, loading state goes to true\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //post the request with route,  and config\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    //dispatch that we are making a request, loading state goes to true\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //post the request with route, paypal payment result, and config\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch that we are making a request, loading state goes to true\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //post the request with route, and config\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    //immediatly dispatch the action request to update state to order = [] and loading = true\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/orders\", config);\r\n    //after successfuling fetching the data dispatch action request success to update loading to false and product to action.payload\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    //if fail, dispatch action fail to change state to loading fail, and error\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const shipOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    //dispatch that we are making a request, loading state goes to true\r\n    dispatch({\r\n      type: ORDER_SHIP_REQUEST,\r\n    });\r\n\r\n    //get userInfo out of state.userLogin.userInfo\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //boilerplate needed for the token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //post the request with route and config\r\n    //**dont forget to put the empty opject */\r\n    const { data } = await axios.put(`/api/orders/${orderId}/ship`, {}, config);\r\n\r\n    dispatch({\r\n      type: ORDER_SHIP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_SHIP_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4 checkoutSteps\">\r\n      <Nav.Item>\r\n        {/* check to see if step1 has been passed in */}\r\n        {/* login */}\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {/* check to see if step2 has been passed in */}\r\n        {/* shipping */}\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {/* check to see if step3 has been passed in */}\r\n        {/* payment */}\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {/* check to see if step4 has been passed in */}\r\n        {/* place order */}\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//components\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  //checks local storage to see if this fields are already filled oug\r\n  //if they are, it fills them in, if not, nothing\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address || \"\");\r\n  const [city, setCity] = useState(shippingAddress.city || \"\");\r\n  const [postalCode, setPostalCode] = useState(\r\n    shippingAddress.postalCode || \"\"\r\n  );\r\n  const [country, setCountry] = useState(shippingAddress.country || \"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Meta title=\"Tailored by Harshil - Shipping\" />\r\n      {/* shows the progress steps, need to send props that represent current progress, this is step2 */}\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={handleSubmit}>\r\n        {/* address */}\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* city */}\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* postal code */}\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* Country */}\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* button */}\r\n        <Button type=\"submit\" variant=\"secondary\">\r\n          Continue to Payment\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//components\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  //checks local storage to see if this fields are already filled oug\r\n  //if they are, it fills them in, if not, nothing\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  //paypal is our default payment method\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal or Credit Card\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Meta title=\"Tailored by Harshil - Payment\" />\r\n      {/* shows the progress steps, need to send props that represent current progress, this is step2 */}\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={handleSubmit}>\r\n        {/* radio buttons to select payment method */}\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Payment Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal or Credit Card\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        {/* button */}\r\n        <Button type=\"submit\" variant=\"secondary\">\r\n          Continue to Place Order\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import { useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //check to make sure previous pages were filled\r\n  if (!cart.shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  } else if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  //calculate prices (tax, shipping, subtotal ect)\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n\r\n  //shipping needs a system\r\n  //if its over $100 => fee shipping, else $10\r\n  cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 10;\r\n\r\n  //tax needs a system\r\n  cart.taxPrice = Number(0.15 * cart.itemsPrice).toFixed(2);\r\n\r\n  //total\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  //once the order goes through, we need access to the state that the action will send back\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  //deconstruct the orderCreate state\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    //if the state returns a success, then we redirect the user to the order confirmation page\r\n    if (success) {\r\n      history.push(`/orders/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [history, success, order, dispatch]);\r\n\r\n  const handlePlaceOrder = () => {\r\n    // pass in the whole order as an object\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        taxPrice: cart.taxPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"place-order-screen\">\r\n      <Meta title=\"Tailored by Harshil - Place Order\" />\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8} className=\"mb-3\">\r\n          <ListGroup variant=\"flush\">\r\n            {/* shipping confirmation */}\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              {/* payment confirmation */}\r\n              <h2>Payment Method</h2>\r\n\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {/* Check to confirm there are items in the cart */}\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item) => (\r\n                    <ListGroup.Item key={item.product}>\r\n                      <Row className=\"d-flex align-items-center\">\r\n                        <Col\r\n                          md={2}\r\n                          className=\"pl-0 pr-0 place-order-screen__image\"\r\n                        >\r\n                          <Image\r\n                            src={item.images[0]}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/products/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} ={\" \"}\r\n                          <strong>${item.qty * item.price}</strong>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"shadow\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              {/* items subtotal */}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* shipping total */}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* tax total */}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* items TOTAL */}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* if the order submission returns an error, display it */}\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\"></Message>}\r\n              </ListGroup.Item>\r\n              {/* place order button */}\r\n              <ListGroup.Item>\r\n                <Button\r\n                  block\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={handlePlaceOrder}\r\n                  variant=\"secondary\"\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst ConfirmationModal = ({\r\n  show,\r\n  onHide,\r\n  confirmHandler,\r\n  title,\r\n  body,\r\n  cancelButton,\r\n  cancelButtonColor,\r\n  confirmButton,\r\n  confirmButtonColor,\r\n  id,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={onHide}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{body}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant={cancelButtonColor} onClick={onHide}>\r\n            {cancelButton}\r\n          </Button>\r\n          <Button\r\n            variant={confirmButtonColor}\r\n            onClick={() => {\r\n              onHide();\r\n              confirmHandler(id);\r\n            }}\r\n          >\r\n            {confirmButton}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n//renders button for paypal payments\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport Meta from \"../components/Meta\";\r\nimport ConfirmationModal from \"../components/ConfirmationModal\";\r\n\r\n//actions\r\nimport { getOrderDetails, payOrder, shipOrder } from \"../actions/orderActions\";\r\n\r\n//constants // ACTIONS\r\nimport { ORDER_PAY_RESET, ORDER_SHIP_RESET } from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  //functionality for the mark to shipped modal confirmation\r\n  const [showShip, setShowShip] = useState(false);\r\n  const handleCloseShip = () => setShowShip(false);\r\n  const handleShowShip = (orderId) => {\r\n    setShowShip(true);\r\n  };\r\n\r\n  //ebay sdk\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //once the order goes through, we need access to the state that the action will send back\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  //deconstruct the orderDetails state\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  //once the payment successfully goes through, we need access to the state that the action will send back\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  //deconstruct the orderPay state, since the variables are used above, rename them\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderShip = useSelector((state) => state.orderShip);\r\n  const { loading: loadingShip, success: successShip } = orderShip;\r\n\r\n  //used as a check to make sure user is logged in\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    //check to make sure there is a user logged in\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    //we are dynamically building a JSscript for the paypal api\r\n    const addPayPalScript = async () => {\r\n      //first get the client id from the route that accesses our env\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      //vanila JS to create a script tag\r\n      const script = document.createElement(\"script\");\r\n      //set type to text and javascript\r\n      script.type = \"text/javascript\";\r\n      //set the source to the site on the paypal docs with the clientId injected\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      //make it async\r\n      script.async = true;\r\n      //we are going to build the 'software development kit' that paypal returns, we need a piece of state to let us know when it is ready\r\n      //tells us once the script has been loaded\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      //inject the script into the body\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    //fetches the order details if it isnt already loaded or if success beacuse accessible\r\n    if (!order || successPay || successShip || order._id !== orderId) {\r\n      //must reset the order otherwise this will be an endless loop\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_SHIP_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      //if the order is not paid, add the paypal script\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [order, orderId, dispatch, successPay, history, userInfo, successShip]);\r\n\r\n  //handler for a successful paypal payment\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const shipHandler = () => {\r\n    dispatch(shipOrder(orderId));\r\n  };\r\n\r\n  //if it is laoding show the loader, if there is an errror, show error, else render order\r\n  return loading ? (\r\n    <BunnyLoader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <div className=\"order-screen\">\r\n      <Meta title=\"Tailored by Harshil - Order\" />\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col lg={8} className=\"mb-3\">\r\n          <ListGroup variant=\"flush\">\r\n            {/* shipping confirmation */}\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isShipped ? (\r\n                <Message variant=\"success\">\r\n                  Shipped on {order.shippedAt.substring(0, 10)}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Shipped</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              {/* payment confirmation */}\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">\r\n                  Paid on {order.paidAt.substring(0, 10)}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {/* Check to confirm there are items in the cart */}\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item) => (\r\n                    <ListGroup.Item key={item.product}>\r\n                      <Row className=\"d-flex align-items-center\">\r\n                        <Col md={2} className=\"pl-0 pr-0 order-screen__image\">\r\n                          <Image\r\n                            src={item.images[0]}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/products/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} ={\" \"}\r\n                          <strong>${item.qty * item.price}</strong>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={4}>\r\n          <Card className=\"shadow\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              {/* items subtotal */}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* shipping total */}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* tax total */}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* items TOTAL */}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* if order is not paid, render the paypal pay button */}\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {/* show loader if it is loading or sdk isnot ready */}\r\n                  {loadingPay && <BunnyLoader />}\r\n                  {/* paypal button takes in total amount and the handler to handle a successful payment */}\r\n\r\n                  {!sdkReady ? (\r\n                    <BunnyLoader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingShip && <BunnyLoader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isShipped && (\r\n                  <ListGroup.Item>\r\n                    <Button block onClick={handleShowShip}>\r\n                      Mark as Shipped\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <ConfirmationModal\r\n        show={showShip}\r\n        onHide={handleCloseShip}\r\n        confirmHandler={shipHandler}\r\n        title=\"Mark as Shipped\"\r\n        body=\"Are you sure you want to mark this item as shipped?\"\r\n        cancelButton=\"Cancel\"\r\n        cancelButtonColor=\"primary\"\r\n        confirmButton=\"Ship\"\r\n        confirmButtonColor=\"secondary\"\r\n        id={orderId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport ConfirmationModal from \"../components/ConfirmationModal\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteUser(id));\r\n  };\r\n\r\n  //confirmation modal functionality\r\n  const [show, setShow] = useState(false);\r\n  const [modalItemId, setModalItemId] = useState({});\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (id) => {\r\n    setModalItemId(id);\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Tailored by Harshil - Users\" />\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <BunnyLoader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>EMAIL</th>\r\n                <th>ADMIN</th>\r\n                <th>EDIT</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id} className=\"text-dark\">\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`} alt={user.email}>\r\n                      {user.email}\r\n                    </a>\r\n                  </td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"green\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"d-flex justify-content-around\">\r\n                    <LinkContainer to={`/admin/users/${user._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      disabled={userInfo._id === user._id}\r\n                      className=\"btn-sm\"\r\n                      onClick={() => {\r\n                        handleShow(user._id);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n            <ConfirmationModal\r\n              show={show}\r\n              onHide={handleClose}\r\n              deleteHandler={deleteHandler}\r\n              title=\"Deleting a User\"\r\n              body=\"Are you sure you want to delete this user?\"\r\n              cancelButton=\"Cancel\"\r\n              cancelButtonColor=\"primary\"\r\n              confirmButton=\"Delete User\"\r\n              confirmButtonColor=\"secondary\"\r\n              id={modalItemId}\r\n            />\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\n\r\n//constants // ACTIONS\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  //component state that will hold the name, email and password\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      //check to see if the user id is already filled in\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, successUpdate, history]);\r\n\r\n  //handle submit button\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Tailored by Harshil - Edit User\" />\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-outline-secondary mb-3\">\r\n        Go Back to All Users\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <BunnyLoader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <BunnyLoader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            {/* name */}\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* email */}\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* password */}\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin?\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            {/* button */}\r\n            <Button type=\"submit\" variant=\"secondary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button, Table, Row, Col, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport ConfirmationModal from \"../components/ConfirmationModal\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport {\r\n  listProducts,\r\n  removeProductInventory,\r\n  createProduct,\r\n  deleteProduct,\r\n} from \"../actions/productActions\";\r\n\r\n//constants ACTIONS\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productRemoveInventory = useSelector(\r\n    (state) => state.productRemoveInventory\r\n  );\r\n  const {\r\n    loading: loadingRemove,\r\n    error: errorRemove,\r\n    success: successRemove,\r\n  } = productRemoveInventory;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/products/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber, 300));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successRemove,\r\n    successCreate,\r\n    createdProduct,\r\n    successDelete,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const removeInventoryHandler = (id) => {\r\n    dispatch(removeProductInventory(id));\r\n  };\r\n\r\n  const deleteProductHandler = (id) => {\r\n    dispatch(deleteProduct(id));\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  //remove item modal functionality\r\n  const [showRemove, setShowRemove] = useState(false);\r\n  const [modalItemId, setModalItemId] = useState({});\r\n\r\n  const handleCloseRemove = () => setShowRemove(false);\r\n  const handleShowRemove = (id) => {\r\n    setModalItemId(id);\r\n    setShowRemove(true);\r\n  };\r\n\r\n  //delete item modal functionality\r\n  const [showDelete, setShowDelete] = useState(false);\r\n\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleShowDelete = (id) => {\r\n    setModalItemId(id);\r\n    setShowDelete(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Tailored by Harshil - Products\" />\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1 className=\"mb-0\">Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button\r\n            className=\"my-3\"\r\n            variant=\"secondary\"\r\n            onClick={createProductHandler}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingRemove && <BunnyLoader />}\r\n      {errorRemove && <Message variant=\"danger\">{errorRemove}</Message>}\r\n      {loadingDelete && <BunnyLoader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <BunnyLoader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <BunnyLoader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n          <Table striped bordered hover responsive className=\"table-sm \">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>Brand</th>\r\n                <th>PICTURE</th>\r\n                <th>SIZE</th>\r\n                <th>NWT</th>\r\n                <th>PRICE</th>\r\n                <th>QTY</th>\r\n                <th>DELETE</th>\r\n                <th>EDITS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id} className=\"text-dark\">\r\n                  <td>\r\n                    <Link to={`/products/${product._id}`}>{product._id}</Link>\r\n                  </td>\r\n\r\n                  <td>{product.name}</td>\r\n                  <td>{product.brand}</td>\r\n\r\n                  <td>\r\n                    <Image\r\n                      style={{ height: \"68px\", width: \"68px\" }}\r\n                      src={product.images[0]}\r\n                      alt={product.name}\r\n                      fluid\r\n                      rounded\r\n                    />\r\n                  </td>\r\n                  <td>{product.size}</td>\r\n                  <td>{product.nwt && \"NWT\"}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.countInStock}</td>\r\n                  <td>\r\n                    <Button\r\n                      onClick={() => handleShowDelete(product._id)}\r\n                      variant=\"danger\"\r\n                      className=\"btn-lg mt-2\"\r\n                      block\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/products/${product._id}/edit`}>\r\n                      <Button block variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      onClick={() => handleShowRemove(product._id)}\r\n                      disabled={product.countInStock < 1 && \"disabled\"}\r\n                      block\r\n                      variant=\"warning\"\r\n                      className=\"btn-sm\"\r\n                    >\r\n                      <i className=\"fab fa-creative-commons-zero\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n            <ConfirmationModal\r\n              show={showRemove}\r\n              onHide={handleCloseRemove}\r\n              confirmHandler={removeInventoryHandler}\r\n              title=\"Removing all Inventory\"\r\n              body=\"Are you sure you want to remove all of the inventory from this item?\"\r\n              cancelButton=\"Cancel\"\r\n              cancelButtonColor=\"primary\"\r\n              confirmButton=\"Remove Inventory\"\r\n              confirmButtonColor=\"secondary\"\r\n              id={modalItemId}\r\n            />\r\n\r\n            <ConfirmationModal\r\n              show={showDelete}\r\n              onHide={handleCloseDelete}\r\n              confirmHandler={deleteProductHandler}\r\n              title=\"Delete Product\"\r\n              body=\"Are you sure you want delete this item from the database?\"\r\n              cancelButton=\"Cancel\"\r\n              cancelButtonColor=\"primary\"\r\n              confirmButton=\"Delete Item\"\r\n              confirmButtonColor=\"secondary\"\r\n              id={modalItemId}\r\n            />\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\n//components\r\nimport Message from \"../components/Message\";\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n//actions\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\n\r\n//constants ACTIONS\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  //all of the current on screen input state\r\n  const [name, setName] = useState(\"\");\r\n  const [nwt, setNwt] = useState(false);\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [size, setSize] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [sex, setSex] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [subColor, setSubColor] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [images, setImages] = useState(\"\");\r\n\r\n  //upload loading status state\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (successUpdate) {\r\n        dispatch({\r\n          type: PRODUCT_UPDATE_RESET,\r\n        });\r\n        history.push(\"/admin/productlist\");\r\n      } else {\r\n        if (!product.name || product._id !== productId) {\r\n          dispatch(listProductDetails(productId));\r\n        } else {\r\n          setName(product.name);\r\n          setNwt(product.nwt);\r\n          setBrand(product.brand);\r\n          setPrice(product.price);\r\n          setSize(product.size);\r\n          setDescription(product.description);\r\n          setSex(product.sex);\r\n          setCategory(product.category);\r\n          setSubCategory(product.subCategory);\r\n          setColor(product.color);\r\n          setSubColor(product.subColor);\r\n          setCountInStock(product.countInStock);\r\n          setImages(product.images.join(\", \"));\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, loading, successUpdate]);\r\n\r\n  //handle submit button\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        nwt,\r\n        brand,\r\n        price,\r\n        size,\r\n        description,\r\n        sex,\r\n        category,\r\n        subCategory,\r\n        color,\r\n        subColor,\r\n        countInStock,\r\n        images: images.split(\",\"),\r\n      })\r\n    );\r\n  };\r\n  //SAVE\r\n  //when you upload an image, it must have multipart/form-data for content type in headers\r\n  const uploadFileHandler = async (e) => {\r\n    //e.target.files are all the files that are selected in the uploader\r\n    const files = e.target.files;\r\n    const formData = new FormData();\r\n\r\n    //loops through array of files and appends them to formData\r\n    for (var i = 0; i < files.length; i++) {\r\n      formData.append(\"image\", files[i]);\r\n    }\r\n\r\n    //sets loading true before axios call\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      //axios call to add the images to url, with data, config\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      //server returns an array of objects, make a newe array with just the paths and a leading /\r\n      let paths = data.map((item) => \"/\" + item.path);\r\n      //join the array together as one string seperated by ,\r\n      paths = paths.join(\", \");\r\n\r\n      //if there were already images, then add a cama and then paths, if no current images, just add paths with no cama\r\n      setImages(!images ? paths : images + \", \" + paths);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-outline-secondary mb-3\">\r\n        Go Back to All Products\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <BunnyLoader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <BunnyLoader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            {/* name */}\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* nNWTame */}\r\n            <Form.Group controlId=\"nwt\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"NWT?\"\r\n                checked={nwt}\r\n                onChange={(e) => setNwt(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            {/* brand */}\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* price */}\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* size */}\r\n            <Form.Group controlId=\"size\">\r\n              <Form.Label>Size</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Size\"\r\n                value={size}\r\n                onChange={(e) => setSize(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* description */}\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={6}\r\n                placeholder=\"Enter Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* sex */}\r\n            <Form.Group controlId=\"sex\">\r\n              <Form.Label>Sex</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Sex\"\r\n                value={sex}\r\n                onChange={(e) => setSex(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* category */}\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* subCategory */}\r\n            <Form.Group controlId=\"subCategory\">\r\n              <Form.Label>sub Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Sub Category\"\r\n                value={subCategory}\r\n                onChange={(e) => setSubCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* color */}\r\n            <Form.Group controlId=\"color\">\r\n              <Form.Label>Color</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Color\"\r\n                value={color}\r\n                onChange={(e) => setColor(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* subColor */}\r\n            <Form.Group controlId=\"subColor\">\r\n              <Form.Label>Sub Color</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Sub Color\"\r\n                value={subColor}\r\n                onChange={(e) => setSubColor(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* countInStock */}\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Count In Stock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* images */}\r\n            {/* upload */}\r\n            <Form.Group controlId=\"images\">\r\n              <Form.Label>Images</Form.Label>\r\n              <Form.File\r\n                className=\"mb-2\"\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                multiple\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <BunnyLoader />}\r\n              {/* text */}\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={16}\r\n                placeholder=\"Enter Images\"\r\n                value={images}\r\n                onChange={(e) => setImages(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* button */}\r\n            <Button type=\"submit\" variant=\"secondary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n      <Meta title=\"Tailored by Harshil - Edit Product\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n//actions\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\n//components\r\nimport BunnyLoader from \"../components/BunnyLoader\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { orders, loading, error } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, history]);\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Tailored by Harshil - Orders\" />\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <BunnyLoader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>SHIPPED</th>\r\n                <th>DETAILS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>\r\n                    {/* only want the first 10 characters of the date string */}\r\n                    {order.createdAt.substring(0, 10)}\r\n                  </td>\r\n                  <td>${order.totalPrice.toFixed(2)}</td>\r\n                  {/* is paid */}\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  {/* is shipped */}\r\n                  <td>\r\n                    {order.isShipped ? (\r\n                      order.shippedAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/orders/${order._id}`}>\r\n                      <Button block size=\"sm\" variant=\"info\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import { Container } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n//components\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\n\r\n//screens\r\nimport AllProductsScreen from \"./screens/AllProductsScreen\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\r\nimport OrderListScreen from \"./screens/OrderListScreen\";\r\n\r\nconst App = () => {\r\n  //base url\r\n  const routerBaseName = process.env.PUBLIC_URL;\r\n\r\n  return (\r\n    <Router basename={routerBaseName}>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Route path=\"/\" component={HomeScreen} exact />\r\n        <Container>\r\n          <Route path=\"/login\" component={LoginScreen} exact />\r\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\r\n          <Route path=\"/orders/:id\" component={OrderScreen} exact />\r\n          <Route path=\"/payment\" component={PaymentScreen} exact />\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\r\n          <Route path=\"/register\" component={RegisterScreen} exact />\r\n          <Route path=\"/profile\" component={ProfileScreen} exact />\r\n\r\n          <Route path=\"/products/:id\" component={ProductScreen} exact />\r\n          {/* the ? makes the id optional */}\r\n          <Route path=\"/cart/:id?\" component={CartScreen} exact />\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} exact />\r\n          <Route\r\n            path=\"/admin/users/:id/edit\"\r\n            component={UserEditScreen}\r\n            exact\r\n          />\r\n\r\n          <Route\r\n            path=\"/admin/productlist\"\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/admin/productlist/:pageNumber\"\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/admin/products/:id/edit\"\r\n            component={ProductEditScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} exact />\r\n          <Route path=\"/products\" component={AllProductsScreen} exact />\r\n          <Route\r\n            path=\"/products/page/:pageNumber/:filter\"\r\n            component={AllProductsScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/products/search/:keyword/:filter\"\r\n            component={AllProductsScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/products/search/:keyword/page/:pageNumber/:filter\"\r\n            component={AllProductsScreen}\r\n            exact\r\n          />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store\";\r\nimport \"./bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}